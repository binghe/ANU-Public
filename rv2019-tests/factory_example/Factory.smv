MODULE Factory

VAR bottle_present: array 0..2 of boolean;
VAR move_belt: boolean;
VAR new_bottle: boolean;

ASSIGN

-- Part I: the presense of bottles (model)

init(bottle_present[0]) := FALSE;
init(bottle_present[1]) := FALSE;
init(bottle_present[2]) := FALSE;

next(bottle_present[0]) :=
 case
  move_belt: new_bottle;
  TRUE: bottle_present[0];
 esac;

next(bottle_present[1]) :=
 case
  move_belt: bottle_present[0];
  TRUE: bottle_present[1];
 esac;

next(bottle_present[2]) :=
 case
  move_belt: bottle_present[1];
  TRUE: bottle_present[2];
 esac;

TRANS
 move_belt -> !next(move_belt)

FAIRNESS
 move_belt

-- Part II: the ingredients (with fault)

VAR bottle_ingr1: array 0..2 of boolean;
VAR bottle_ingr2: array 0..2 of boolean;
VAR fault: boolean;

ASSIGN

init(bottle_ingr1[0]) := FALSE;
init(bottle_ingr1[1]) := FALSE;
init(bottle_ingr1[2]) := FALSE;
init(bottle_ingr2[0]) := FALSE;
init(bottle_ingr2[1]) := FALSE;
init(bottle_ingr2[2]) := FALSE;

next(bottle_ingr1[0]) :=
 case
  move_belt: FALSE;
  TRUE: bottle_present[0] & !fault;
 esac;

next(bottle_ingr1[1]) :=
 case
  move_belt: bottle_ingr1[0];
  TRUE: bottle_ingr1[1];
 esac;

next(bottle_ingr1[2]) :=
 case
  move_belt: bottle_ingr1[1];
  TRUE: bottle_ingr1[2];
 esac;

next(bottle_ingr2[0]) := FALSE;

next(bottle_ingr2[1]) :=
 case
  move_belt: bottle_ingr2[0];
  TRUE: bottle_present[1] & !fault;
 esac;

next(bottle_ingr2[2]) :=
 case
  move_belt: bottle_ingr2[1];
  TRUE: bottle_ingr2[2];
 esac;

